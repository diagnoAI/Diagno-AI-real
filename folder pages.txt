next folder created in src folder was pages folder

and all the files displayed below

src -> pages -> FeaturesPage.jsx:
import React from 'react';
import { motion } from 'framer-motion';
import { Features } from '../components/Features';
import '../styles/FeaturesPage.css';
import { useLocation } from 'react-router-dom';
import { useEffect } from 'react';

export function FeaturesPage() {
  const location = useLocation();

  useEffect(() => {
    window.scrollTo(0, 0);
  }, [location.pathname]);

  return (
    <motion.main
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="features-page"
    >
      <Features />
    </motion.main>
  );
}
src -> styles -> FeaturesPage.css
.features-page {
    padding-top: 4rem; /* Matches Tailwind's pt-16 (16 * 0.25rem = 4rem) */
  }

src -> pages -> WorkflowPage.jsx:
import React, { useEffect } from 'react'; // Add useEffect
import { motion } from 'framer-motion';
import { Workflow } from '../components/Workflow';
import '../styles/WorkflowPage.css';
import { useLocation } from 'react-router-dom'; // Add useLocation

export function WorkflowPage() {
  const location = useLocation();

  // Scroll to top on route change
  useEffect(() => {
    window.scrollTo(0, 0);
  }, [location.pathname]);

  return (
    <motion.main
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="workflow-page"
    >
      <Workflow />
    </motion.main>
  );
}

src -> styles -> WorkFlowPage.css:
.workflow-page {
    padding-top: 4rem; /* Matches Tailwind's pt-16 (16 * 0.25rem = 4rem) */
  }


src -> pages -> AboutPage.jsx:
import React, { useEffect } from 'react';
import { motion } from 'framer-motion';
import { About } from '../components/About';
import '../styles/AboutPage.css';
import { useLocation } from 'react-router-dom';

export function AboutPage() {
  const location = useLocation();

  useEffect(() => {
    window.scrollTo(0, 0);
  } , [location.pathname]);

  return (
    <motion.main
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="about-page"
    >
      <About />
    </motion.main>
  );
}

src -> styles -> AboutPage.css:
.about-page {
    padding-top: 4rem; /* Matches Tailwind's pt-16 (16 * 0.25rem = 4rem) */
  }

src -> pages -> ContactPage.jsx:
import React from 'react';
import { motion } from 'framer-motion';
import { Contact } from '../components/Contact';
import '../styles/ContactPage.css';
import { useLocation } from 'react-router-dom';
import { useEffect } from 'react';

export function ContactPage() {
  const location = useLocation();

  useEffect(() => {
    window.scrollTo(0, 0);
  }, [location.pathname]);

  return (
    <motion.main
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="contact-page"
    >
      <Contact />
    </motion.main>
  );
}

src -> styles -> ContactPage.css:
.contact-page {
    padding-top: 4rem; /* Matches Tailwind's pt-16 (16 * 0.25rem = 4rem) */
    height: 100vh;
    width: 100%;
  }

src -> pages -> Landing.jsx:
import React from 'react';
import { Hero } from '../components/Hero';
import { Features } from '../components/Features';
import { Workflow } from '../components/Workflow';
import { About } from '../components/About';
import { Contact } from '../components/Contact';
import './Landing.css';

export function Landing() {
  return (
    <div className="landing-page">
      <Hero />
      <Features />
      <Workflow />
      <About />
      <Contact />
    </div>
  );
}

src -> pages -> Landing.css:  // i also some created CSS file directly along with jsx like this Landing.css
.landing-page {   background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff); }


Authentication pages: was created in src folder -> pages folder -> Auth folder
files are given below

src -> pages -> Auth -> Login.jsx
import React, { useState, useEffect } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import { useAuth } from '../../context/AuthContext';
import toast from 'react-hot-toast';
import './Login.css';

export function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const { login, user } = useAuth(); // Add user to detect logout
  const navigate = useNavigate();

  // Reset form fields when user is null (after logout)
  useEffect(() => {
    if (!user) {
      setEmail('');
      setPassword('');
    }
  }, [user]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      await login({ email, password });
      toast.success('Login successful!');
      navigate('/');
    } catch (error) {
      toast.error('Login failed');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="login-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="glass login-container"
      >
        <h2 className="login-title">Sign in to Diagno AI</h2>
        <form className="login-form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="email" className="form-label">Email</label>
            <input
              id="email"
              type="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <div className="form-group">
            <label htmlFor="password" className="form-label">Password</label>
            <input
              id="password"
              type="password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <button
            type="submit"
            className="form-submit focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 hover:bg-blue-700"
            disabled={isLoading}
          >
            {isLoading ? <span className="spinner"></span> : 'Login'}
          </button>
        </form>
        <p className="login-signup">
          Donâ€™t have an account? <Link to="/signup" className="signup-link">Sign Up</Link>
        </p>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> Login.css
.login-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    /* backdrop-filter: blur(20px); */
    padding: 3rem 1rem;
  }
  
  .login-container {
    max-width: 28rem; /* Matches Tailwind's max-w-md */
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .login-logo {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .login-icon {
    height: 3rem;
    width: 3rem;
    color: #2563eb;
  }
  
  .login-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .login-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  /* .form-group { */
    /* No additional styles needed here */
  /* } */
  
  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
  }
  
  .form-input {
    margin-top: 0.25rem;
    display: block;
    width: 100%;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    padding: 0.5rem 0.75rem;
  }
  
  .form-submit {
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
    font-size: 0.875rem;
    font-weight: 500;
    color: #ffffff;
    background: #2563eb;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .login-signup-text {
    margin-top: 1rem;
    text-align: center;
    font-size: 0.875rem;
    color: #4b5563;
  }
  
  .login-signup-link {
    font-weight: 500;
    color: #2563eb;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  .spinner {
    width: 1rem;
    height: 1rem;
    animation: spin 1s linear infinite;
  }
  
  /* Responsive adjustments */
  @media (min-width: 640px) {
    .login-page {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .login-page {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

  /* ... Existing styles ... */

.login-signup {
  text-align: center;
  font-size: 0.875rem;
  color: #4b5563;
  margin-top: 1rem;
}

.signup-link {
  color: #2563eb;
  text-decoration: none;
  font-weight: 500;
}

.signup-link:hover {
  text-decoration: underline;
}

src -> pages -> Auth -> Signup.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { useAuth } from '../../context/AuthContext';
import toast from 'react-hot-toast';
import './Signup.css';

export function Signup() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [name, setName] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const { signup } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      await signup({ email, password, name });
      toast.success('Signup successful! Please verify your email.');
      navigate('/otp'); // Redirect to OTP first
    } catch (error) {
      toast.error('Signup failed');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="signup-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="signup-container glass"
      >
        <h2 className="signup-title">Sign Up</h2>
        <form className="signup-form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name" className="form-label">Full Name</label>
            <input
              id="name"
              type="text"
              required
              value={name}
              onChange={(e) => setName(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <div className="form-group">
            <label htmlFor="email" className="form-label">Email</label>
            <input
              id="email"
              type="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <div className="form-group">
            <label htmlFor="password" className="form-label">Password</label>
            <input
              id="password"
              type="password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <button
            type="submit"
            className="form-submit hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            disabled={isLoading}
          >
            {isLoading ? <span className="spinner"></span> : 'Sign Up'}
          </button>
        </form>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> Signup.css
.signup-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    padding: 3rem 1rem;
  }
  
  .signup-container {
    max-width: 28rem; /* Matches Tailwind's max-w-md */
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .signup-logo {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .signup-icon {
    height: 3rem;
    width: 3rem;
    color: #2563eb;
  }
  
  .signup-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .signup-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  /* .form-group { */
    /* No additional styles needed here */
  /* } */
  
  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
  }
  
  .form-input {
    margin-top: 0.25rem;
    display: block;
    width: 100%;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    padding: 0.5rem 0.75rem;
  }
  
  .form-submit {
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
    font-size: 0.875rem;
    font-weight: 500;
    color: #ffffff;
    background: #2563eb;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .signup-login-text {
    margin-top: 1rem;
    text-align: center;
    font-size: 0.875rem;
    color: #4b5563;
  }
  
  .signup-login-link {
    font-weight: 500;
    color: #2563eb;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  /* Responsive adjustments */
  @media (min-width: 640px) {
    .signup-page {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .signup-page {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

src -> pages -> Auth -> OTP.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { useAuth } from '../../context/AuthContext';
import toast from 'react-hot-toast';
import './OTP.css';

export function OTP() {
  const [otp, setOtp] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const { verifyOTP } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      await verifyOTP(otp);
      toast.success('Email verified!');
      navigate('/setup-profile/step1'); // Redirect to profile setup
    } catch (error) {
      toast.error('Invalid OTP');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="otp-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="otp-container glass"
      >
        <h2 className="otp-title">Verify Your Email</h2>
        <form className="otp-form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="otp" className="form-label">
              Enter OTP
            </label>
            <input
              id="otp"
              type="text"
              required
              value={otp}
              onChange={(e) => setOtp(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
              disabled={isLoading}
            />
          </div>
          <button
            type="submit"
            className="form-submit hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            disabled={isLoading}
          >
            {isLoading ? <span className="spinner"></span> : 'Verify'}
          </button>
        </form>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> OTP.css
.otp-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    padding: 3rem 1rem;
  }
  
  .otp-container {
    max-width: 28rem;
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .otp-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .otp-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  /* .form-group { */
    /* No additional styles */
  /* } */
  
  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
  }
  
  .form-input {
    margin-top: 0.25rem;
    display: block;
    width: 100%;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    padding: 0.5rem 0.75rem;
  }
  
  .form-submit {
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    font-size: 0.875rem;
    font-weight: 500;
    color: #ffffff;
    background: #2563eb;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  @media (min-width: 640px) {
    .otp-page {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .otp-page {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

  /* ... Existing styles ... */

.spinner {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border: 2px solid #ffffff;
  border-top: 2px solid transparent;
  border-radius: 50%;
  animation: spin 0.75s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

src -> pages -> Auth -> SetupProfileStep1.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import './SetupProfileStep1.css';

export function SetupProfileStep1() {
  const [name, setName] = useState('');
  const [error, setError] = useState(''); // Add error state
  const navigate = useNavigate();

  const handleNext = (e) => {
    e.preventDefault();
    if (!name.trim()) {
      setError('Name is required');
    } else if (name.length < 2) {
      setError('Name must be at least 2 characters');
    } else {
      setError('');
      navigate('/setup-profile/step2', { state: { name } });
    }
  };

  return (
    <div className="setup-step1-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="setup-step1-container glass"
      >
        <h2 className="setup-step1-title">Enter Your Name</h2>
        <form className="setup-step1-form" onSubmit={handleNext}>
          <div className="form-group">
            <label htmlFor="name" className="form-label">
              Full Name
            </label>
            <input
              id="name"
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              className={`form-input focus:border-blue-500 focus:ring-blue-500 ${error ? 'error' : ''}`}
            />
            {error && <p className="error-text">{error}</p>}
          </div>
          <button
            type="submit"
            className="form-submit hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            Next
          </button>
        </form>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> SetupProfileStep1.css
.setup-step1-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    padding: 3rem 1rem;
  }
  
  .setup-step1-container {
    max-width: 28rem;
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .setup-step1-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .setup-step1-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  /* ... Existing styles ... */

.error {
  border-color: #ef4444;
}

.error-text {
  font-size: 0.75rem;
  color: #ef4444;
  margin-top: 0.25rem;
}
  
  /* Reuses .form-group, .form-label, .form-input, .form-submit from OTP.css */

  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
  }

  .form-input {
    margin-top: 0.25rem;
    display: block;
    width: 100%;
    border-radius: 0.375rem;
    border: 1px solid #d1d5db;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    padding: 0.5rem 0.75rem;
  }

  .form-submit {
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    font-size: 0.875rem;
    font-weight: 500;
    color: #ffffff;
    background: #2563eb;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

src -> pages -> Auth -> SetupProfileStep2.jsx
import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { motion } from 'framer-motion';
import './SetupProfileStep2.css';

export function SetupProfileStep2() {
  const [hospital, setHospital] = useState('');
  const navigate = useNavigate();
  const { state } = useLocation();

  const handleNext = (e) => {
    e.preventDefault();
    if (hospital) {
      navigate('/setup-profile/step3', { state: { ...state, hospital } });
    }
  };

  return (
    <div className="setup-step2-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="setup-step2-container glass"
      >
        <h2 className="setup-step2-title">Enter Clinic/Hospital Name</h2>
        <form className="setup-step2-form" onSubmit={handleNext}>
          <div className="form-group">
            <label htmlFor="hospital" className="form-label">
              Clinic or Hospital
            </label>
            <input
              id="hospital"
              type="text"
              required
              value={hospital}
              onChange={(e) => setHospital(e.target.value)}
              className="form-input focus:border-blue-500 focus:ring-blue-500"
            />
          </div>
          <button
            type="submit"
            className="form-submit hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            Next
          </button>
        </form>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> SetupProfileStep2.css
.setup-step2-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    padding: 3rem 1rem;
  }
  
  .setup-step2-container {
    max-width: 28rem;
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .setup-step2-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .setup-step2-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

src -> pages -> Auth -> SetupProfileStep3.jsx
import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { motion } from 'framer-motion';
import { Upload } from 'lucide-react';
import { useDropzone } from 'react-dropzone';
import { useAuth } from '../../context/AuthContext';
import toast from 'react-hot-toast';
import './SetupProfileStep3.css';

export function SetupProfileStep3() {
  const [profileImage, setProfileImage] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();
  const { state } = useLocation();
  const { updateProfile } = useAuth();

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    accept: { 'image/*': [] },
    maxFiles: 1,
    onDrop: (acceptedFiles) => {
      setProfileImage(acceptedFiles[0]);
    },
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      await updateProfile({
        name: state.name,
        hospital: state.hospital,
        profileImage: profileImage ? URL.createObjectURL(profileImage) : null,
      });
      toast.success('Profile setup complete!');
      navigate('/'); // Redirect to Landing page
    } catch (error) {
      toast.error('Failed to setup profile');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="setup-step3-page">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="setup-step3-container glass"
      >
        <h2 className="setup-step3-title">Upload Profile Photo</h2>
        <form className="setup-step3-form" onSubmit={handleSubmit}>
          <div
            {...getRootProps()}
            className="dropzone hover:border-blue-500"
          >
            <input {...getInputProps()} />
            <div className="dropzone-content">
              <Upload className="dropzone-icon" />
              <div className="dropzone-text">
                <label className="dropzone-label hover:text-blue-500">
                  {isDragActive ? 'Drop the file here' : 'Upload a profile photo'}
                </label>
              </div>
            </div>
          </div>
          <button
            type="submit"
            className="form-submit hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            disabled={isLoading}
          >
            {isLoading ? <span className="spinner"></span> : 'Complete Setup'}
          </button>
        </form>
      </motion.div>
    </div>
  );
}

src -> pages -> Auth -> SetupProfileStep3.css
.setup-step3-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom right, #eff6ff, #ffffff, #ecfeff);
    padding: 3rem 1rem;
  }
  
  .setup-step3-container {
    max-width: 28rem;
    width: 100%;
    border-radius: 0.75rem;
    padding: 2rem;
  }
  
  .setup-step3-title {
    text-align: center;
    font-size: 1.875rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 2rem;
  }
  
  .setup-step3-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .dropzone {
    margin-top: 0.25rem;
    display: flex;
    justify-content: center;
    padding: 1.5rem;
    border: 2px dashed #d1d5db;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: border-color 0.2s ease;
  }
  
  .dropzone-content {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    text-align: center;
  }
  
  .dropzone-icon {
    margin: 0 auto;
    height: 3rem;
    width: 3rem;
    color: #9ca3af;
  }
  
  .dropzone-text {
    display: flex;
    font-size: 0.875rem;
    color: #4b5563;
  }
  
  .dropzone-label {
    cursor: pointer;
    font-weight: 500;
    color: #2563eb;
    transition: color 0.2s ease;
  }