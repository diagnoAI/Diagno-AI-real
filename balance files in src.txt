Balance files in src folder are App.jsx , App.css , main.jsx , index.css
Balance files codes are given below

src -> App.jsx:
import React from 'react';
import { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';
import { Toaster } from 'react-hot-toast';
import { AuthProvider } from './context/AuthContext';
import { Navbar } from './components/Navbar';
import { Landing } from './pages/Landing';
import { FeaturesPage } from './pages/FeaturesPage';
import { WorkflowPage } from './pages/WorkflowPage';
import { AboutPage } from './pages/AboutPage';
import { ContactPage } from './pages/ContactPage';
import { Login } from './pages/Auth/Login';
import { Signup } from './pages/Auth/Signup';
import { OTP } from './pages/Auth/OTP';
import { SetupProfileStep1 } from './pages/Auth/SetupProfileStep1';
import { SetupProfileStep2 } from './pages/Auth/SetupProfileStep2';
import { SetupProfileStep3 } from './pages/Auth/SetupProfileStep3';
import { Dashboard } from './pages/Dashboard/Dashboard.jsx'; // Updated path
import './App.css';
import { SetupProfile } from './pages/Auth/SetupProfile.jsx';

function ScrollToTop() {
  const { pathname } = useLocation();
  React.useEffect(() => {
    window.scrollTo(0, 0);
  }, [pathname]);
  return null;
}

function App() {
  return (
    <Router>
      <AuthProvider>
        <div className="app-container">
          <Routes>
            <Route path="/dashboard/*" element={<Dashboard />} />
            <Route
              path="/"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <Landing />
                </>
              }
            />
            <Route
              path="/features"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <FeaturesPage />
                </>
              }
            />
            <Route
              path="/workflow"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <WorkflowPage />
                </>
              }
            />
            <Route
              path="/about"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <AboutPage />
                </>
              }
            />
            <Route
              path="/contact"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <ContactPage />
                </>
              }
            />
            <Route
              path="/login"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <Login />
                </>
              }
            />
            <Route
              path="/signup"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <Signup />
                </>
              }
            />
            <Route
              path="/otp"
              element={
                <>
                  <Navbar />
                  <ScrollToTop />
                  <OTP />
                </>
              }
            />
            <Route path='/setupprofile' element={<SetupProfile/>}/>
            <Route path="/setup-profile/step1" element={<SetupProfileStep1 />} />
            <Route path="/setup-profile/step2" element={<SetupProfileStep2 />} />
            <Route path="/setup-profile/step3" element={<SetupProfileStep3 />} />
          </Routes>
          <Toaster position="top-center"/>
        </div>
      </AuthProvider>
    </Router>
  );
}

export default App;

src -> App.css:
.app-container {
  min-height: 100vh;
  background: #f9fafb; 
}


src -> main.jsx:
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


src -> index.css:
/* Base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Components */
.nav-link {
  color: #4b5563;
  transition: color 0.2s ease;
}

.nav-link:hover {
  color: #2563eb;
}

/* Glass morphism utilities */
.glass {
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.75);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}


@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}


.hover\:bg-gray-100:hover {
  background: #f3f4f6;
}

.hover\:bg-blue-700:hover {
  background: #1d4ed8;
}


.focus\:outline-none:focus {
  outline: none;
}

.focus\:ring-2:focus {
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 1);
}

.focus\:ring-offset-2:focus {
  box-shadow: 0 0 0 2px white, 0 0 0 4px rgba(37, 99, 235, 1);
}

.focus\:ring-blue-500:focus {
  box-shadow: 0 0 0 2px white, 0 0 0 4px rgba(59, 130, 246, 1);
}

Now out of src folder like in frontend folder src folder files are done there are some files in frontend folder code are given below:

frontend -> .gitignore:
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

frontend -> eslint.config.js:
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]


frontend -> index.html:
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Diagno AI</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

frontend -> package.json:
{
  "name": "frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@react-pdf/renderer": "^4.3.0",
    "axois": "^0.0.1-security",
    "chart.js": "^4.4.8",
    "clsx": "^2.1.1",
    "framer-motion": "^12.5.0",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.482.0",
    "pdfjs-dist": "^5.0.375",
    "react": "^19.0.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.8",
    "react-hot-toast": "^2.5.2",
    "react-pdf": "^9.2.1",
    "react-router-dom": "^7.3.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react": "^4.3.4",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "vite": "^6.2.0"
  }
}

frontend -> package-lock.json:

the package-lock.json file has 4469 lines so i can't share it 


frontend -> README.md:
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript and enable type-aware lint rules. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.


frontend -> vite.config.js:
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})

